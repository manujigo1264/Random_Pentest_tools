#!/bin/bash

# Define functions

usage() {
  echo "Usage: $0 <IP1> <NAME1> [<IP2> <NAME2> ... <IPn> <NAMEn>]"
  exit 1
}

add_entry_to_hosts() {
  echo "$1 $2.htb" >> /etc/hosts
}

create_target_directory() {
  sudo mkdir -p "/home/kali/Documents/HTB/${1}_${2}"
}

scan_for_open_ports() {
  /usr/bin/nmap -p- --min-rate=1000 -T4 -n -Pn --disable-arp-ping "$1" | grep ^[0-9] | cut -d '/' -f 1 | tr '\n' ',' | sed s/,$//
}

save_open_ports() {
  echo "$1" >> "/home/kali/Documents/HTB/${2}_${3}/openPorts.scan_$4.txt"
  echo "[+] Open Ports done: $1"
}

perform_service_scanning() {
  /usr/bin/nmap -p "$1" -A -n -Pn --disable-arp-ping --script vuln "$2" -oX "/home/kali/Documents/HTB/${3}_${4}/banner_$5.xml" > /dev/null 2>&1
  /usr/bin/nmap -p "$1" -sC -n -Pn --disable-arp-ping "$2" -oX "/home/kali/Documents/HTB/${3}_${4}/defaultScript_scan_$5.xml" > /dev/null 2>&1
  echo "[+] Service Scan done..."
}

convert_xml_reports_to_html() {
  xsltproc -o "/home/kali/Documents/HTB/${1}_${2}/banner_$3.html" "/usr/share/nmap/nmap.xsl" "/home/kali/Documents/HTB/${1}_${2}/banner_$3.xml"
  xsltproc -o "/home/kali/Documents/HTB/${1}_${2}/defaultScript_scan_$3.html" "/usr/share/nmap/nmap.xsl" "/home/kali/Documents/HTB/${1}_${2}/defaultScript_scan_$3.xml"
}

remove_xml_files() {
  rm "/home/kali/Documents/HTB/${1}_${2}/banner_$3.xml"
  rm "/home/kali/Documents/HTB/${1}_${2}/defaultScript_scan_$3.xml"
  echo "[+] Done..."
}

# Check if the required input parameters are provided
if [ $# -lt 2 ] || [ $(expr $# % 2) -ne 0 ]; then
  usage
fi

# Process each pair of IPs and names
while [ $# -gt 0 ]; do
  # Get input parameters
  ip="$1"
  name="$2"

  # Remove processed parameters
  shift 2

  # Add entry to /etc/hosts
  add_entry_to_hosts "$ip" "$name"

  # Create target directory for storing scan results
  create_target_directory "$ip" "$name"

  # Get current date and previous date
  d=$(date +%Y-%m-%d)
  y=$(date -d yesterday +%Y-%m-%d)

  # Scan for open ports using nmap and save the results in the 'ports' variable
  ports=$(scan_for_open_ports "$ip")
  # Save the open ports to a file
  save_open_ports "$ports" "$ip" "$name" "$y"

  # Perform service banner and vulnerability scanning using nmap and save the results as XML files
  perform_service_scanning "$ports" "$ip" "$ip" "$name" "$y"

  # Convert XML reports to HTML using xsltproc
  convert_xml_reports_to_html "$ip" "$name" "$y"

  # Remove the original XML files
  remove_xml_files "$ip" "$name" "$y"
done
